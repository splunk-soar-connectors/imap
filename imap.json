{
    "appid": "9f2e9f72-b0e5-45d6-92a7-09ef820476c1",
    "name": "IMAP",
    "description": "This app supports email ingestion and various investigative actions over IMAP",
    "type": "email",
    "publisher": "Splunk",
    "main_module": "imap_connector.py",
    "app_version": "3.2.7",
    "utctime_updated": "2022-01-07T20:34:11.000000Z",
    "package_name": "phantom_imap",
    "product_vendor": "Generic",
    "product_name": "IMAP",
    "product_version_regex": ".*",
    "min_phantom_version": "5.0.0",
    "fips_compliant": true,
    "latest_tested_versions": [
        "On-premise Outlook Web Access v14.3.301.0, Mailbox server Microsoft Exchange v14.3.123.0"
    ],
    "python_version": "3",
    "logo": "logo_splunk.svg",
    "logo_dark": "logo_splunk_dark.svg",
    "license": "Copyright (c) 2014-2021 Splunk Inc.",
    "configuration": {
        "server": {
            "data_type": "string",
            "description": "Server IP/Hostname",
            "order": 0,
            "required": true
        },
        "ph": {
            "data_type": "ph",
            "order": 1
        },
        "username": {
            "data_type": "string",
            "description": "Username",
            "order": 2
        },
        "password": {
            "data_type": "password",
            "description": "Password",
            "order": 3
        },
        "folder": {
            "data_type": "string",
            "description": "Folder to ingest mails from (default is inbox)",
            "order": 4,
            "default": "inbox"
        },
        "ingest_manner": {
            "data_type": "string",
            "description": "How to ingest",
            "required": true,
            "order": 5,
            "value_list": [
                "oldest first",
                "latest first"
            ],
            "default": "oldest first",
            "verbose": "During ingestion, should the app get the latest emails or the oldest."
        },
        "first_run_max_emails": {
            "data_type": "numeric",
            "order": 6,
            "description": "Maximum emails to poll first time",
            "value": "2000",
            "required": true
        },
        "max_emails": {
            "data_type": "numeric",
            "order": 7,
            "description": "Maximum emails to poll",
            "value": "100",
            "required": true
        },
        "use_ssl": {
            "data_type": "boolean",
            "description": "Use SSL",
            "order": 8,
            "default": false
        },
        "extract_attachments": {
            "data_type": "boolean",
            "description": "Extract Attachments",
            "order": 9,
            "default": true
        },
        "extract_urls": {
            "data_type": "boolean",
            "description": "Extract URLs",
            "order": 10,
            "default": true
        },
        "extract_ips": {
            "data_type": "boolean",
            "description": "Extract IPs",
            "order": 11,
            "default": true
        },
        "extract_domains": {
            "data_type": "boolean",
            "description": "Extract Domain Names",
            "order": 12,
            "default": true
        },
        "extract_hashes": {
            "data_type": "boolean",
            "description": "Extract Hashes",
            "order": 13,
            "default": true
        },
        "add_body_to_header_artifacts": {
            "data_type": "boolean",
            "description": "Add email body to the Email Artifact",
            "order": 14,
            "default": false
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity. This action runs a quick query on the server to check the connection and credentials",
            "type": "test",
            "identifier": "test_asset_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get email",
            "description": "Get an email from the server or container",
            "verbose": "Every container that is created by the IMAP app has the following values:<ul><li>The container ID, that is generated by the Phantom platform.</li><li>The Source ID that the app equates to the email ID along with the hash of the folder name on the remote server</li><li>The raw_email data in the container's data field is set to the RFC822 format of the email.</li></ul>This action parses email data and if specified, creates containers and artifacts. The email data to parse is either extracted from the remote server if an email <b>id</b> is specified along with its folder name or from a Phantom container if the <b>contianer_id</b> is specified. The folder parameter is used only when the email id is specified in the input. If the folder is not mentioned, it takes the folder name from the asset configuration parameter. If the folder name is not specified as an input of the \"get email\" action or in asset configuration parameters, \"inbox\" is taken as its value.<br>If both parameters are specified, the action will use the <b>container_id</b>.<br>Do note that any containers and artifacts created will use the label configured in the asset.",
            "type": "investigate",
            "identifier": "get_email",
            "read_only": true,
            "parameters": {
                "id": {
                    "description": "Message ID to get",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "imap email id"
                    ],
                    "primary": true
                },
                "container_id": {
                    "description": "Container ID to get email data from",
                    "data_type": "numeric",
                    "order": 1,
                    "contains": [
                        "phantom container id"
                    ],
                    "primary": true
                },
                "folder": {
                    "data_type": "string",
                    "description": "Folder name of email to get(used when id is given as input)",
                    "order": 2
                },
                "ingest_email": {
                    "description": "Create container and artifacts",
                    "data_type": "boolean",
                    "order": 3,
                    "default": false
                }
            },
            "render": {
                "type": "json"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.container_id",
                    "data_type": "numeric",
                    "contains": [
                        "phantom container id"
                    ],
                    "example_values": [
                        1270
                    ]
                },
                {
                    "data_path": "action_result.parameter.id",
                    "data_type": "string",
                    "contains": [
                        "imap email id"
                    ],
                    "example_values": [
                        "1918"
                    ]
                },
                {
                    "data_path": "action_result.parameter.ingest_email",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.folder",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.X-Mozilla-Draft-Info",
                    "data_type": "string",
                    "example_values": [
                        "internal/draft; vcard=0; receipt=0; DSN=0; uuencode=0;\r\n attachmentreminder=0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.X-Identity-Key",
                    "data_type": "string",
                    "example_values": [
                        "id1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.X-Account-Key",
                    "data_type": "string",
                    "example_values": [
                        "account7"
                    ]
                },
                {
                    "data_path": "action_result.data.*.FCC",
                    "data_type": "string",
                    "example_values": [
                        "test://user@19.2.4.2/Sent"
                    ]
                },
                {
                    "data_path": "action_result.data.*.CC",
                    "data_type": "string",
                    "example_values": [
                        "User <test@xyz.com>"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Accept-Language",
                    "data_type": "string",
                    "example_values": [
                        "en-US"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Content-Language",
                    "data_type": "string",
                    "example_values": [
                        "en-US"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Content-Transfer-Encoding",
                    "data_type": "string",
                    "example_values": [
                        "quoted-printable"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Content-Type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Date",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.From",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.In-Reply-To",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.MIME-Version",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Message-ID",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Received",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.References",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Return-Path",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Subject",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Thread-Index",
                    "data_type": "string",
                    "example_values": [
                        "AdZLNWgVDiTd5bCtTtyx3vkNcc0vtQ=="
                    ]
                },
                {
                    "data_path": "action_result.data.*.Thread-Topic",
                    "data_type": "string",
                    "example_values": [
                        "beep for 4.9!"
                    ]
                },
                {
                    "data_path": "action_result.data.*.To",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.User-Agent",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-MS-Exchange-Organization-AuthAs",
                    "data_type": "string",
                    "example_values": [
                        "Internal"
                    ]
                },
                {
                    "data_path": "action_result.data.*.X-MS-Exchange-Organization-AuthMechanism",
                    "data_type": "string",
                    "example_values": [
                        "04"
                    ]
                },
                {
                    "data_path": "action_result.data.*.X-MS-Exchange-Organization-AuthSource",
                    "data_type": "string",
                    "example_values": [
                        "test1.test.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.X-MS-Exchange-Organization-SCL",
                    "data_type": "string",
                    "example_values": [
                        "-1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.X-MS-Has-Attach",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-MS-TNEF-Correlator",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.container_id",
                    "data_type": "numeric",
                    "contains": [
                        "phantom container id"
                    ],
                    "example_values": [
                        2433
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Container id: 704"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "description": "Callback action for the on_poll ingest functionality",
            "type": "ingest",
            "identifier": "on_poll",
            "read_only": true,
            "parameters": {
                "start_time": {
                    "data_type": "numeric",
                    "description": "Parameter ignored for this app"
                },
                "end_time": {
                    "data_type": "numeric",
                    "description": "Parameter ignored for this app"
                },
                "container_id": {
                    "data_type": "string",
                    "description": "Parameter ignored for this app"
                },
                "container_count": {
                    "data_type": "numeric",
                    "description": "Maximum number of container records to query for",
                    "required": true,
                    "value": 100
                },
                "artifact_count": {
                    "data_type": "numeric",
                    "description": "Parameter ignored for this app",
                    "required": true,
                    "value": 1000
                }
            },
            "output": [],
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/beautifulsoup4-4.9.1-py3-none-any.whl"
            },
            {
                "module": "certifi",
                "input_file": "wheels/certifi-2021.10.8-py2.py3-none-any.whl"
            },
            {
                "module": "chardet",
                "input_file": "wheels/chardet-3.0.4-py2.py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/idna-2.10-py2.py3-none-any.whl"
            },
            {
                "module": "parse",
                "input_file": "wheels/parse-1.17.0-py3-none-any.whl"
            },
            {
                "module": "python_dateutil",
                "input_file": "wheels/python_dateutil-2.8.1-py2.py3-none-any.whl"
            },
            {
                "module": "python_magic",
                "input_file": "wheels/python_magic-0.4.18-py2.py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/requests-2.25.0-py2.py3-none-any.whl"
            },
            {
                "module": "six",
                "input_file": "wheels/six-1.16.0-py2.py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/soupsieve-2.3.1-py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/urllib3-1.26.7-py2.py3-none-any.whl"
            }
        ]
    }
}